@page "/Settings/Theme"
@inherits AppComponentBase;
@namespace Functionland.FxFiles.Client.Shared.Pages

@*<div class="theme-content">
    <FxToolBar
        IsInRoot="false"
        IsBackButtonVisible="true" 
        IsAddButtonVisible="false"
        IsOverflowButtonVisible="false"
        OnBackClick="HandleToolbarBack"/>

    @if(_isLoaded)
    {
        <div class="theme-options">
            @($"Use System Theme ({SystemTheme})")
            <BitCheckbox @bind-Value="@IsSystemTheme" OnChange="@OnUseSystemThemeAsync" />
            Dark Theme
            <BitToggle @bind-Value="@IsDarkMode" IsEnabled="@(!IsSystemTheme)" OnChange="@OnThemeChangedAsync" />
        </div>
    }

</div>
*@
<FxToolBar IsInRoot="false"
    IsBackButtonVisible="true"
    IsAddButtonVisible="false"
    IsOverflowButtonVisible="false"
    OnBackClick="HandleToolbarBack" />

<section class="theme-mode">
    <div class="mode-content">Mode</div>

    <div class="select-theme-mode">
        <div class="light-mode-part">
            <div class="mode-img light-mode-img"></div>
            <label class="mode-content" id="light-mode">
                Light 
            </label>
        </div>

        <div class="dark-mode-part">
            <div class="mode-img dark-mode-img"></div>
            <label class="mode-content" id="light-mode">
                Dark
            </label>
        </div>
    </div>

    <div class="system-theme-setting">
        <div class="system-theme-info">
            <div class="system-theme-option">Automatic dark mode</div>
            <div class="system-theme-desc">Use system light/dark mode setting.</div>
        </div>

        <BitToggle @bind-Value="@IsDarkMode" IsEnabled="@(!IsSystemTheme)" OnChange="@OnThemeChangedAsync" />
    </div>

</section>